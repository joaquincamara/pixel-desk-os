{"version":3,"sources":["assets/pixel-desk-logo.svg","assets/zelda.mp3","assets/castlevania.mp3","assets/pokemon.mp3","assets/pixel-desk-icon.svg","assets/shut_down_normal.ico","assets/notepad.ico","assets/settings_gear.ico","assets/directory_closed.ico","assets/game_mine_2.ico","assets/multimedia.ico","assets/system-infor.ico","utils/When.jsx","views/initSystem/InitSystem.jsx","components/molecules/navbar/Navbar.jsx","components/molecules/window/Window.jsx","views/homDesk/HomeDesl.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","When","predicate","children","shuffledMusic","zeldaMusic","castlevaniaMusic","pokemonMusic","map","a","sort","Math","random","value","b","Initsystem","useState","progressPercentage","setProgressPercentage","history","useHistory","useEffect","setTimeout","clearTimeout","id","handleInitSystem","event","key","push","React","window","addEventListener","removeEventListener","className","src","PixelDeskLogo","alt","max","hidden","controls","autoPlay","Navbar","isMenuActive","setIsMenuActive","moment","format","date","setDate","timerID","setInterval","clearInterval","onClick","startMenuIcon","systemInfoIcon","musicPlayerIcon","gameIcon","documentsIcon","SettingIcon","notePadIcon","shutDownIcon","disabled","Window","elment","pos1","pos2","pos3","pos4","document","getElementById","onmousedown","dragMouseDown","preventDefault","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","style","top","offsetTop","left","offsetLeft","dragElement","aria-label","HomeDesk","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35cb8b3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pixel-desk-logo.b8b0651d.svg\";","module.exports = __webpack_public_path__ + \"static/media/zelda.35e5073a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/castlevania.b084d6a5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pokemon.ad18d75f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/pixel-desk-icon.1294995d.svg\";","module.exports = __webpack_public_path__ + \"static/media/shut_down_normal.d4604b5a.ico\";","module.exports = __webpack_public_path__ + \"static/media/notepad.37e3ef92.ico\";","module.exports = __webpack_public_path__ + \"static/media/settings_gear.744bf98b.ico\";","module.exports = __webpack_public_path__ + \"static/media/directory_closed.dba9793e.ico\";","module.exports = __webpack_public_path__ + \"static/media/game_mine_2.7ee9e4ff.ico\";","module.exports = __webpack_public_path__ + \"static/media/multimedia.263f7fc7.ico\";","module.exports = __webpack_public_path__ + \"static/media/system-infor.72c57337.ico\";","import React from 'react';\n\nexport const When = ({ predicate, children }) => {\n  if (predicate) return <>{children}</>;\n  return <></>;\n};\n","import React, { useState, useEffect } from 'react';\nimport PixelDeskLogo from '../../assets/pixel-desk-logo.svg';\nimport zeldaMusic from '../../assets/zelda.mp3';\nimport castlevaniaMusic from '../../assets/castlevania.mp3';\nimport pokemonMusic from '../../assets/pokemon.mp3';\nimport { useHistory } from 'react-router-dom';\nimport { When } from '../../utils/When';\n\nimport './initSystem.scss';\n\nconst music = [zeldaMusic, castlevaniaMusic, pokemonMusic];\nconst shuffledMusic = music\n  .map((a) => ({ sort: Math.random(), value: a }))\n  .sort((a, b) => a.sort - b.sort)\n  .map((a) => a.value);\n\nexport const Initsystem = () => {\n  const step = 1;\n  const interval = 30;\n  const maxProgress = 100;\n  let id;\n\n  const [progressPercentage, setProgressPercentage] = useState(0);\n  const history = useHistory();\n\n  useEffect(() => {\n    const updateProgress = () => {\n      setProgressPercentage(progressPercentage + step);\n    };\n\n    if (progressPercentage < maxProgress) {\n      setTimeout(updateProgress, interval);\n    }\n\n    return clearTimeout(id);\n  }, [progressPercentage, id]);\n\n  const handleInitSystem = (event) => {\n    if (event.key === 'Enter') {\n      return history.push('/home');\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', handleInitSystem);\n\n    return () => {\n      window.removeEventListener('keydown', handleInitSystem);\n    };\n  }, []);\n\n  return (\n    <div className='init-system'>\n      <img src={PixelDeskLogo} alt='Pixel-Desk-Logo' />\n      <progress max='100' value={progressPercentage} />\n      <When predicate={progressPercentage === 100}>\n        <p className='blinking'>Press ENTER to Log-in</p>\n        <audio hidden src={shuffledMusic[0]} controls autoPlay />\n      </When>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport startMenuIcon from '../../../assets/pixel-desk-icon.svg';\nimport shutDownIcon from '../../../assets/shut_down_normal.ico';\nimport notePadIcon from '../../../assets/notepad.ico';\nimport SettingIcon from '../../../assets/settings_gear.ico';\nimport documentsIcon from '../../../assets/directory_closed.ico';\nimport gameIcon from '../../../assets/game_mine_2.ico';\nimport musicPlayerIcon from '../../../assets/multimedia.ico';\nimport systemInfoIcon from '../../../assets/system-infor.ico';\n\nimport '98.css';\nimport './navbar.scss';\n\nexport const Navbar = () => {\n  const [isMenuActive, setIsMenuActive] = useState(true);\n  const [date, setDate] = useState(moment().format('MM/DD/YY h:mm:ss a'));\n  const history = useHistory();\n\n  useEffect(() => {\n    let timerID = setInterval(() => handleClock(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  }, [date]);\n\n  function handleClock() {\n    setDate(moment().format('h:mm:ss a--MM / DD / YY'));\n  }\n\n  return (\n    <div className='navbar'>\n      <div className='navbar__dropup'>\n        <button\n          onClick={() => setIsMenuActive(!isMenuActive)}\n          className='navbar__dropbtn'\n        >\n          <img src={startMenuIcon} alt='Shut-down' />\n        </button>\n        <div\n          hidden={isMenuActive}\n          className={isMenuActive ? '' : 'navbar__dropup-content'}\n        >\n          <div className='navbar__dropup-content__action'>\n            <img src={systemInfoIcon} alt='system-infor' />\n            <p>System info</p>\n          </div>\n          <div className='navbar__dropup-content__action'>\n            <img src={musicPlayerIcon} alt='musicPlayerIcon' />\n            <p>Music player</p>\n          </div>\n          <div className='navbar__dropup-content__action'>\n            <img src={gameIcon} alt='gameIcon' />\n            <p>Video game console</p>\n          </div>\n          <div className='navbar__dropup-content__action'>\n            <img src={documentsIcon} alt='documents' />\n            <p>Documents</p>\n          </div>\n          <div className='navbar__dropup-content__action'>\n            <img src={SettingIcon} alt='Setting-Icon' />\n            <p>Settings</p>\n          </div>\n          <div className='navbar__dropup-content__action'>\n            <img src={notePadIcon} alt='note-Pad' />\n            <p>Notepad</p>\n          </div>\n          <div\n            onClick={() => history.push('/')}\n            className='navbar__dropup-content__action-shut-down'\n          >\n            <img src={shutDownIcon} alt='shut-Down' />\n            <p>Shut Down</p>\n          </div>\n        </div>\n      </div>\n\n      <button disabled className='navbar__dropbtn-active'>\n        {date}\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport '98.css';\n\nimport './window.scss';\n\nexport const Window = () => {\n  useEffect(() => {\n    dragElement(document.getElementById('draggableDiv'));\n  });\n\n  function dragElement(elment) {\n    let pos1 = 0;\n    let pos2 = 0;\n    let pos3 = 0;\n    let pos4 = 0;\n    if (document.getElementById(elment.id + 'Header')) {\n      // if present, the header is where you move the DIV from:\n      document.getElementById(elment.id + 'Header').onmousedown = dragMouseDown;\n    } else {\n      // otherwise, move the DIV from anywhere inside the DIV:\n      elment.onmousedown = dragMouseDown;\n    }\n\n    function dragMouseDown(event) {\n      event = event || window.event;\n      event.preventDefault();\n      // get the mouse cursor position at startup:\n      pos3 = event.clientX;\n      pos4 = event.clientY;\n      document.onmouseup = closeDragElement;\n      // call a function whenever the cursor moves:\n      document.onmousemove = elementDrag;\n    }\n\n    function elementDrag(event) {\n      event = event || window.event;\n      event.preventDefault();\n      // calculate the new cursor position:\n      pos1 = pos3 - event.clientX;\n      pos2 = pos4 - event.clientY;\n      pos3 = event.clientX;\n      pos4 = event.clientY;\n      // set the element's new position:\n      elment.style.top = elment.offsetTop - pos2 + 'px';\n      elment.style.left = elment.offsetLeft - pos1 + 'px';\n    }\n\n    function closeDragElement() {\n      // stop moving when mouse button is released:\n      document.onmouseup = null;\n      document.onmousemove = null;\n    }\n  }\n  return (\n    <div id='draggableDiv' className='window'>\n      <div id='draggableDivHeader' className='title-bar'>\n        <div className='title-bar-text'>System Info</div>\n        <div className='title-bar-controls'>\n          <button aria-label='Minimize' />\n          <button aria-label='Maximize' />\n          <button aria-label='Close' />\n        </div>\n      </div>\n\n      <div className='window-body'>\n        <h3>I AM DRAGABBLE</h3>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Navbar } from '../../components/molecules/navbar/Navbar';\nimport { Window } from '../../components/molecules/window/Window';\n\nimport './homeDesk.scss';\n\nexport const HomeDesk = () => {\n  return (\n    <div className='home-desk'>\n      <Window />\n      <Navbar />\n    </div>\n  );\n};\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Initsystem } from './views/initSystem/InitSystem';\nimport { HomeDesk } from './views/homDesk/HomeDesl';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <HashRouter basename='/'>\n        <Route exact path='/' component={Initsystem} />\n        <Route path='/home' component={HomeDesk} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}